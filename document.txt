2017-10-30
Job done, credits accomplished. Close project.

2017-06-26
AspectJ is a good tool, but there is a problem: aspect can not implement serializable. As a result I have to use nested class.

2017-06-18
Well, FeatureHouse does not work. I will go back to AHEAD if this problem can't be solved this afternoon.
I understand, the basic module must be the leftmost, yeah it's my problem because it's alreay mentioned in lecture.
But...FeatureHouse crashed hundreds times!!! And there're still some small bugs:
1. As long as you open a configuration, you can not set "current configuration".
2. Sometimes (most of the time) code can not refresh automatically, you have to set current configuration 2 times or even more.
3. You can not simply use "ctrl+Z" to recover a deleted feature from model.xml.

2017-06-16
AHEAD is much easier to use than FeatureHouse because FeatureHouse has some bugs. It will not refresh the code automatically sometimes. But the Hiwi recommanded to use FeatureHouse...
It crashed many times!!!

2017-06-03
1. Yes, I'm sure that's a bug. But it works fine even though the error message keeps staying there.
2. I found the new task (black-box plug-in) really hard, because I have divided some "basic features" into many subfeatures, it's impossible to combine them together from different plug-ins. Maybe yes, but currently I don't know how.
3. Each time when new plugin is added, Main class must be adjusted, it's a hard work.

2017-05-26
The feature-IDE framework has bug I think. Always "nullpointer".

2017-05-18
For task 3 there're always some annoying things:
1. If I set some features which will always be activated by all the variants to concret, Feature-IDE will say "this expression is tautoloty ...", but if do not explicitly define/implement them in code, Feature-IDE will say "You should use the feature XXX ..."
2. Nested code is a big problem, caused too many failures.
3. It seems that some of my features are not really good features, but it's a little too late to change them.

2017-05-06
There might be some problems, or maybe I just didn't get the idea of SPL. My project just seems like a "authority control".
1. It's really hard to load different functions based on config without creating new classes (even java reflection).
2. A little weird when some features are alternative, there's no "else" in example (I have used some "else").
3. If some features are mandatory to all the configs, it seems also weird. That's really strange.

2017-05-01
If you ask me what is SPL, I'd like to say it's a possibility to adjust the software based on user requirements. It's cool but the realisation is annoying. Each software has some basic parts that should be implemented in any case. Then I'd like to say we just make a "base" like a socket (DE: Steckdose) and put other plug-ins onto it.

2017-04-26
Some of my choosen features seems weird, such as the languages of UI.
They are not real features, I think.